# This file is autogenerated by maturin v1.3.1
# To update, run
#
#    maturin generate-ci github
#
name: Release wheels

on:
  workflow_call:
    inputs:
      os:
        description: 'OS'
        required: false
        type: string
        default: '["ubuntu-latest", "windows-latest", "macos-latest"]'
      maturin-module-dir:
        description: 'Maturin project directory'
        required: false
        type: string
        default: '.'
      fail-fast:
        description: 'Fail fast'
        required: false
        type: boolean
        default: true
      environment:  # needs both environment and secrets to work https://github.com/actions/runner/issues/1490
        description: 'github environment from which secrets.PYPI_API_TOKEN & env.PYPI_UPLOAD_URL are loaded'
        required: false
        type: string
        default: 'test'
      python-version:
        description: 'Python version'
        required: false
        type: string
        default: '3.12'
    secrets: # needs both environment and secrets to work https://github.com/actions/runner/issues/1490
      PYPI_API_TOKEN:
        description: 'PyPI API token'
        required: true      

jobs:

  linux:
    runs-on: ubuntu-latest
    if: ${{ contains( fromJson( inputs.os ), 'ubuntu-latest' ) }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        target: [x86_64, aarch64, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          working-directory: ${{ inputs.maturin-module-dir }}
          command: build
          args: --release --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./target/wheels/
          overwrite: true

  windows:
    runs-on: windows-latest
    if: ${{ contains( fromJson( inputs.os ), 'windows-latest' ) }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        target: [x64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          working-directory: ${{ inputs.maturin-module-dir }}
          command: build
          args: --release --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./target/wheels/
          overwrite: true

  macos:
    runs-on: macos-latest
    if: ${{ contains( fromJson( inputs.os ), 'macos-latest' ) }}
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          working-directory: ${{ inputs.maturin-module-dir }}
          command: build
          args: --release --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: ./target/wheels/
          overwrite: true

  pypi-publish:
    name: publish to pypi using environment='${{ inputs.environment }}'
    needs: [linux, windows, macos]
    if: |
      always() &&
      (needs.linux.result == 'success' || needs.linux.result == 'skipped') &&
      (needs.windows.result == 'success' || needs.windows.result == 'skipped') &&
      (needs.macos.result == 'success' || needs.macos.result == 'skipped')
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          MATURIN_REPOSITORY_URL: ${{ vars.PYPI_UPLOAD_URL }}
        with:
          command: upload
          args: --non-interactive --skip-existing *