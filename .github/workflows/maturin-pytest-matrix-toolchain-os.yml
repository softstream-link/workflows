name: Rust Test + Maturin PyTest On matrix toolchain * os

on:
  workflow_call:
    inputs:
      toolchain:
        description: 'Rust toolchain'
        required: false
        type: string
        default: '["stable", "nightly"]'
      os:
        description: 'OS'
        required: false
        type: string
        default: '["ubuntu-latest", "windows-latest", "macos-latest"]'
      fail-fast:
        description: 'Fail fast'
        required: false
        type: boolean
        default: true
      maturin-module-dir:
        description: 'Maturin project directory'
        required: false
        type: string
        default: '.'
    
jobs:
  test:
    strategy:
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        toolchain: ${{ fromJson( inputs.toolchain ) }}
        os: ${{ fromJson( inputs.os ) }}
        
    name: test ${{ matrix.os }}/${{ matrix.toolchain }} 
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: taiki-e/install-action@v2
        with:
          tool: nextest
      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: build_env
          init-shell: bash zsh powershell
          create-args: >-
            maturin
            pytest
      - name: Test
        shell: bash -el {0}
        run: |
          cargo nextest run --all-features &&
          cargo nextest run --examples --all-features
          cargo test --doc --all-features
          cargo doc --no-deps --all-features
          pushd ${{ inputs.maturin-module-dir }}
          maturin develop
          pytest
